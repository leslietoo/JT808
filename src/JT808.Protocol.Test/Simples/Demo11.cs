using JT808.Protocol.Enums;
using JT808.Protocol.Interfaces;
using JT808.Protocol.Internal;
using JT808.Protocol.Extensions;
using Microsoft.Extensions.DependencyInjection;
using System;
using System.Collections.Generic;
using System.Text;
using Xunit;
using JT808.Protocol.MessageBody;
using JT808.Protocol.Formatters;
using JT808.Protocol.MessagePack;
using System.Text.Json;
using JT808.Protocol.MessageBody.CarDVR;
using System.Linq;

namespace JT808.Protocol.Test.Simples
{
    public class Demo11
    {
        JT808Serializer JT808Serializer = new JT808Serializer(new DefaultGlobalConfig() { SkipCRCCode = true });

        [Fact]
        public void Test1()
        {
            byte[] bytesoHexBytes();
            var package = JT808Serializer.Deserialize<JT808Package>(bytes);
            var bodies = package.Bodies as JT808_0x0704;
            //从第几个补传数据开始后续的包就有问题
            Assert.Equal(1,bodies.ErrorRemainPositions.FirstOrDefault(i=>i.Key==1).Key);
            Assert.Equal(2, bodies.Count);
            Assert.Single(bodies.Positions);
        }
    }
}
